//! This file will be autogenerated. It's currently a manual placeholder.
use crate::op::helpers::{Config, Stack, Transform};
use std::io::Result;
use std::path::Path;

#[derive(Debug, PartialEq)]
pub enum OpCode {
    Import,
}

pub fn to_opcode(arg: impl AsRef<str>) -> Option<OpCode> {
    match arg.as_ref() {
        "--import" => Some(OpCode::Import),
        _ => None,
    }
}

#[derive(Debug, PartialEq, Clone)]
pub enum Op {
    Import(crate::op::ops::import::Import),
}

impl Transform for &Op {
    fn transform<P>(self, cfg: &Config<P>, stack: Stack) -> Result<Stack>
    where
        P: AsRef<Path>,
    {
        match self {
            Op::Import(t) => t.transform(cfg, stack),
        }
    }
}
